{"version":3,"sources":["Todolist.js","App.js","index.js"],"names":["Todolist","props","className","onClick","onSelect","id","text","App","useState","inputList","setinputList","Items","setItems","deleteItems","oldItems","filter","arrElem","index","innerSize","outerSize","color","outerAlpha","innerScale","outerScale","type","placeholder","value","onChange","event","target","map","itemVal","ReactDOM","render","document","getElementById"],"mappings":"gOAsBeA,EAlBE,SAACC,GAGhB,OACE,mCACE,sBAAKC,UAAU,aAAf,UACE,wBAAQC,QAAS,WACbF,EAAMG,SAASH,EAAMI,KAEzBH,UAAU,SAHV,SAIE,cAAC,IAAD,MAEF,6BAAKD,EAAMK,a,0CC8DJC,EAvEH,WAAO,IAAD,EACkBC,mBAAS,IAD3B,mBACTC,EADS,KACEC,EADF,OAEUF,mBAAS,IAFnB,mBAETG,EAFS,KAEFC,EAFE,KAgBVC,EAAc,SAACR,GACnBO,GAAS,SAACE,GACR,OAAOA,EAASC,QAAO,SAACC,EAASC,GAC/B,OAAOA,IAAUZ,SAKvB,OACE,mCACE,sBAAKH,UAAU,WAAf,UACE,cAAC,IAAD,CACEgB,UAAW,EACXC,UAAW,EACXC,MAAM,eACNC,WAAY,GACZC,WAAY,GACZC,WAAY,IAGd,sBAAKrB,UAAU,aAAf,UACE,uBACA,2CACA,uBAEA,uBACEA,UAAU,QACVsB,KAAK,OACLC,YAAY,YACZC,MAAOjB,EACPkB,SAzCQ,SAACC,GACjBlB,EAAakB,EAAMC,OAAOH,UA0CpB,wBAAQxB,UAAU,MAAMC,QAvCf,WACfS,GAAS,SAACE,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAqBL,OAEvBC,EAAa,KAmCP,SACE,cAAC,IAAD,MAGF,6BACGC,EAAMmB,KAAI,SAACC,EAASd,GACnB,OACE,cAAC,EAAD,CACEX,KAAMyB,EAEN1B,GAAIY,EACJb,SAAUS,GAFLI,iBC1DvBe,IAASC,OAEL,cAAC,EAAD,IAEDC,SAASC,eAAe,W","file":"static/js/main.1e46696c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport UseAnimations from 'react-useanimations';\r\n\r\nconst Todolist = (props) => {\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"todo-style\">\r\n        <button onClick={()=>{             /*-----callback function*/       \r\n            props.onSelect(props.id)          \r\n        }} \r\n        className=\"delete\">\r\n          <HighlightOffIcon/>\r\n        </button>\r\n        <li>{props.text}</li>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todolist;\r\n","import React, { useState } from \"react\";\nimport Todolist from \"./Todolist.js\";\nimport \"./App.css\";\nimport AddCircleRoundedIcon from \"@material-ui/icons/AddCircleRounded\";\nimport AnimatedCursor from \"react-animated-cursor\"\n// import UseAnimations from 'react-useanimations';\n\nconst App = () => {\n  const [inputList, setinputList] = useState(\"\");\n  const [Items, setItems] = useState([]);\n\n  // ----Items written in Input to target and show in the div--------\n  const itemEvent = (event) => {\n    setinputList(event.target.value);\n  };\n\n  const showItem = () => {\n    setItems((oldItems) => {\n      return [...oldItems, inputList];\n    });\n    setinputList(\"\");\n  };\n\n  const deleteItems = (id) => {\n    setItems((oldItems) => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });\n  };\n\n  return (\n    <>\n      <div className=\"main-div\">\n        <AnimatedCursor\n          innerSize={8}\n          outerSize={8}\n          color='193, 11, 111'\n          outerAlpha={0.2}\n          innerScale={0.7}\n          outerScale={5}\n          \n        />\n        <div className=\"center-div\">\n          <br />\n          <h1>TODO LIST</h1>\n          <br />\n          \n          <input\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"Add Items\"\n            value={inputList}\n            onChange={itemEvent}\n          ></input>\n          <button className=\"add\" onClick={showItem}>\n            <AddCircleRoundedIcon />\n          </button>\n\n          <ol>\n            {Items.map((itemVal, index) => {\n              return (\n                <Todolist\n                  text={itemVal}\n                  key={index}\n                  id={index}\n                  onSelect={deleteItems}\n                />\n              );\n            })}\n          </ol>\n        \n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />\n  \n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}